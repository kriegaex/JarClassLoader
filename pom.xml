<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.scrum-master</groupId>
  <artifactId>jar-class-loader</artifactId>
  <version>1.0</version>
  <packaging>jar</packaging>

  <name>JarClassLoader</name>
  <description>
    The class loader to load classes, native libraries and resources from the top JAR and from JARs inside the top JAR.
    The top JAR very often is referred as an executable, standalone or uber JAR. The class loader looks through the
    hierarchy of JARs and allows nested JARs. The class loader delegates class loading to the parent class loader and
    successfully loads classes, native libraries and resources when it works not in a JAR environment.

    Taken from http://www.jdotsoft.com/JarClassLoader.php, see there for more information.
  </description>
  <url>https://github.com/kriegaex/JarClassLoader</url>

  <licenses>
    <license>
      <name>GNU General Public License (GPL) version 2.0</name>
      <url>http://www.gnu.org/licenses/gpl-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Alexander Kriegisch</name>
      <organization>Scrum-Master.de</organization>
      <organizationUrl>http://scrum-master.de</organizationUrl>
    </developer>
  </developers>

  <scm>
    <url>https://github.com/kriegaex/JarClassLoader</url>
    <connection>scm:git:https://github.com/kriegaex/JarClassLoader.git</connection>
    <developerConnection>scm:git:https://github.com/kriegaex/JarClassLoader.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <!--
      If you want to build from an IDE like IDEA or Eclipse and use GnuPG version >= v2.0,
      set the parameter to true in order to get a nice GUI dialog for entering the passphrase.
      You can also set property gpg.passphrase in IDEA's Maven > Runner settings instead.
      If you want to build from a console, set it to false or override it via -DgpgGuiPassphrase=false.
    -->
    <gpgGuiPassphrase>false</gpgGuiPassphrase>

    <!-- If you have multiple GnuPG signing keys on your keyring, the first one is used as the default key.
    In order to use another one, specify the desired key ID here, otherwise you may just leave the parameter
    empty or override it via -DgpgKeyId=. It does not hurt to always specify it, though. -->
    <gpgKeyId>70CC1444</gpgKeyId>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>1.4</version>
        <configuration>
          <useAgent>${gpgGuiPassphrase}</useAgent>
          <keyname>${gpgKeyId}</keyname>
        </configuration>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.6.7</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <autoReleaseAfterClose>true</autoReleaseAfterClose>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.2.1</version>
        <executions>
          <execution>
            <id>package-sources</id>
            <phase>package</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.9.1</version>
        <executions>
          <execution>
            <id>package-javadocs</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.4.1</version>
      </plugin>
    </plugins>
  </build>

  <dependencies>
  </dependencies>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

</project>
